{"version":3,"sources":["components/EmojiCard/index.js","components/NavBar/index.js","components/WinOrLoseCard/index.js","components/EmojiGame/index.js","App.js","index.js"],"names":["EmojiCard","props","emoji","onClickEmoji","id","emojiName","emojiUrl","className","onClick","src","alt","NavBar","renderScores","currentScore","isGameOver","topScore","this","Component","WinOrLoseCard","isWon","onClickPlayAgain","score","imageUrl","gameStatus","scoreLabel","type","EmojiGame","state","clickedEmojis","setTopScore","setState","finishGameAndSetTopScore","newScore","setIsGameOver","emojisList","isEmojiPresent","includes","clickedEmojisLength","length","previousState","getShuffledEmojisList","sort","Math","random","renderEmojisList","shuffledEmojisList","map","value","resetGame","renderScoreCard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46d9299a.chunk.js","sourcesContent":["// Write your code here.\nimport './index.css'\n\nconst EmojiCard = props => {\n  const {emoji, onClickEmoji} = props\n  const {id, emojiName, emojiUrl} = emoji\n  const onClickEmojiCard = () => onClickEmoji(id)\n\n  return (\n    <li className=\"emoji-item\" onClick={onClickEmojiCard}>\n      <img className=\"emoji-icon\" src={emojiUrl} alt={emojiName} />\n    </li>\n  )\n}\n\nexport default EmojiCard\n","// Write your code here.\nimport {Component} from 'react'\n\nimport './index.css'\n\nclass NavBar extends Component {\n  renderScores = () => {\n    const {currentScore, isGameOver, topScore} = this.props\n\n    if (isGameOver) {\n      return null\n    }\n    return (\n      <div className=\"scores-container\">\n        <p className=\"score\">Score: {currentScore}</p>\n        <p className=\"score\">Top Score: {topScore}</p>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <nav className=\"nav-bar-container\">\n        <div className=\"title-with-score-container\">\n          <div className=\"logo-and-title-container\">\n            <img\n              className=\"emoji-logo\"\n              src=\"https://assets.ccbp.in/frontend/react-js/game-logo-img.png\"\n              alt=\"Emoji Logo\"\n            />\n            <h1 className=\"title\">Emoji Game</h1>\n          </div>\n          {this.renderScores()}\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default NavBar\n","// Write your code here.\nimport './index.css'\n\nconst LOSE_IMAGE = 'https://assets.ccbp.in/frontend/react-js/lose-game-img.png'\nconst WON_IMAGE = 'https://assets.ccbp.in/frontend/react-js/won-game-img.png'\n\nconst WinOrLoseCard = props => {\n  const {isWon, onClickPlayAgain, score} = props\n  const imageUrl = isWon ? WON_IMAGE : LOSE_IMAGE\n  const gameStatus = isWon ? 'You Won' : 'You Lose'\n  const scoreLabel = isWon ? 'Best Score' : 'Score'\n\n  return (\n    <div className=\"win-or-lose-card\">\n      <div className=\"details-section\">\n        <h1 className=\"game-status\">{gameStatus}</h1>\n        <p className=\"current-score-label\">{scoreLabel}</p>\n        <p className=\"current-score-value\">{score}/12</p>\n        <button\n          type=\"button\"\n          className=\"play-again-button\"\n          onClick={onClickPlayAgain}\n        >\n          Play Again\n        </button>\n      </div>\n      <div className=\"image-section\">\n        <img className=\"win-or-lose-image\" src={imageUrl} alt=\"win or lose\" />\n      </div>\n    </div>\n  )\n}\n\nexport default WinOrLoseCard\n","/* \nQuick Tip \n\n- Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nconst shuffledEmojisList = () => {\n  const {emojisList} = this.props\n  return emojisList.sort(() => Math.random() - 0.5)\n}\n\n*/\n\n// Write your code here.\nimport {Component} from 'react'\n\nimport EmojiCard from '../EmojiCard'\nimport NavBar from '../NavBar'\nimport WinOrLoseCard from '../WinOrLoseCard'\n\nimport './index.css'\n\nclass EmojiGame extends Component {\n  state = {\n    clickedEmojis: [],\n    isGameOver: false,\n    topScore: 0,\n  }\n\n  setTopScore = currentScore => {\n    const {topScore} = this.state\n    if (currentScore > topScore) {\n      this.setState({topScore: currentScore})\n    }\n  }\n\n  finishGameAndSetTopScore = newScore => {\n    this.setIsGameOver(true)\n    this.setTopScore(newScore)\n  }\n\n  onClickEmoji = id => {\n    const {emojisList} = this.props\n    const {clickedEmojis} = this.state\n    const isEmojiPresent = clickedEmojis.includes(id)\n    const clickedEmojisLength = clickedEmojis.length\n\n    if (isEmojiPresent) {\n      this.finishGameAndSetTopScore(clickedEmojisLength)\n    } else {\n      if (emojisList.length - 1 === clickedEmojisLength) {\n        this.finishGameAndSetTopScore(emojisList.length)\n      }\n      this.setState(previousState => ({\n        clickedEmojis: [...previousState.clickedEmojis, id],\n      }))\n    }\n  }\n\n  getShuffledEmojisList = () => {\n    const {emojisList} = this.props\n    return emojisList.sort(() => Math.random() - 0.5)\n  }\n\n  renderEmojisList = () => {\n    const shuffledEmojisList = this.getShuffledEmojisList()\n\n    return (\n      <ul className=\"emojis-list-container\">\n        {shuffledEmojisList.map(emoji => (\n          <EmojiCard\n            emoji={emoji}\n            key={emoji.id}\n            onClickEmoji={this.onClickEmoji}\n          />\n        ))}\n      </ul>\n    )\n  }\n\n  setIsGameOver = value => {\n    this.setState({isGameOver: value})\n  }\n\n  resetGame = () => {\n    this.setIsGameOver(false)\n    this.setState({clickedEmojis: []})\n  }\n\n  renderScoreCard = () => {\n    const {emojisList} = this.props\n    const {clickedEmojis} = this.state\n    const isWon = clickedEmojis.length === emojisList.length\n\n    return (\n      <WinOrLoseCard\n        isWon={isWon}\n        onClickPlayAgain={this.resetGame}\n        score={clickedEmojis.length}\n      />\n    )\n  }\n\n  render() {\n    const {clickedEmojis, isGameOver, topScore} = this.state\n\n    return (\n      <div className=\"emoji-game-container\">\n        <NavBar\n          currentScore={clickedEmojis.length}\n          isGameOver={isGameOver}\n          topScore={topScore}\n        />\n        <div className=\"emoji-game-body\">\n          {isGameOver ? this.renderScoreCard() : this.renderEmojisList()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EmojiGame\n","import EmojiGame from './components/EmojiGame'\n\nimport './App.css'\n\nexport const emojisList = [\n  {\n    id: 0,\n    emojiName: 'Face with stuck out tongue',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-img.png',\n  },\n  {\n    id: 1,\n    emojiName: 'Face with head bandage',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-head-bandage-img.png',\n  },\n  {\n    id: 2,\n    emojiName: 'Face with hugs',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-hugs-img.png',\n  },\n  {\n    id: 3,\n    emojiName: 'Face with laughing',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-img.png',\n  },\n  {\n    id: 4,\n    emojiName: 'Laughing face with hand in front of mouth',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-with-hand-infront-mouth-img.png',\n  },\n  {\n    id: 5,\n    emojiName: 'Face with mask',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-mask-img.png',\n  },\n  {\n    id: 6,\n    emojiName: 'Face with silence',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-silence-img.png',\n  },\n  {\n    id: 7,\n    emojiName: 'Face with stuck out tongue and winked eye',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-and-winking-eye-img.png',\n  },\n  {\n    id: 8,\n    emojiName: 'Grinning face with sweat',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/grinning-face-with-sweat-img.png',\n  },\n  {\n    id: 9,\n    emojiName: 'Smiling face with heart eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-heart-eyes-img.png',\n  },\n  {\n    id: 10,\n    emojiName: 'Grinning face',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/grinning-face-img.png',\n  },\n  {\n    id: 11,\n    emojiName: 'Smiling face with star eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-star-eyes-img.png',\n  },\n]\n\nconst App = () => <EmojiGame emojisList={emojisList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}